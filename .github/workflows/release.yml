name: Release Manager [main]

on:
  push:
    branches: [ "main" ]
jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with: 
        fetch-depth: 0
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21.0.4'
        distribution: 'liberica'
        java-package: jdk+fx
        architecture: x64 
        
    - name: Build Project
      run: mvn --batch-mode --update-snapshots verify
      
    - name: Stage Files
      run: mkdir staging && cp target/*.jar staging 
      
    - name: Upload JAR file
      uses: actions/upload-artifact@v4
      with:
        name: AcademicEvents
        path: staging
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./staging/AcademicEvents-1.0-SNAPSHOT.jar
        asset_name: AcademicEvents.jar
        asset_content_type: application/zip
